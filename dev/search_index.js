var documenterSearchIndex = {"docs":
[{"location":"#GeometricAlgebra.jl-Documentation","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.jl Documentation","text":"","category":"section"},{"location":"","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.jl Documentation","text":"This is the initial documentation version.","category":"page"},{"location":"","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.jl Documentation","text":"Modules = [GeometricAlgebra]","category":"page"},{"location":"#GeometricAlgebra.AbstractMultivector","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.AbstractMultivector","text":"AbstractMultivector{sig,C}\n\nSupertype of all elements in the geometric algebra over a vector space with metric signature sig.\n\nThe parameter C is the type which the multivector components are internally stored as. For instance, a::AbstractMultivector{(1,1), SparseVector{Int64}} is a (mixed) multivector in the Euclidean plane with components of eltype(a) == Int64 stored in a Vector.\n\n\n\n\n\n","category":"type"},{"location":"#GeometricAlgebra.Blade","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.Blade","text":"Blade{sig,k,T,B} <: AbstractMultivector{sig,Pair{B,T}}\nBlade{sig}(coeff, ublade)\n\nA grade k blade (i.e., wedge product of k basis vectors) with coefficient of type T and unit blade represented by type B, in vector space of metric signature sig.\n\nUnit blade type B E.g. for v_1v_3v_4 Signature\nUnsigned 0b1101 any\nVector{<:Integer} [1, 3, 4] any\nVector{<:Symbol} [:v1, :v2, :v3] labelled\n\nExamples\n\njulia> Blade{(1,1,1)}(42, 0b101)\nGrade-2 Blade{⟨+++⟩, 2, Int64, UInt8}:\n 42 v13\n\njulia> Blade{(x=1,y=1,z=1)}(1, [:x])\nGrade-1 Blade{⟨x+,y+,z+⟩, 1, Int64, Array{Symbol,1}}:\n 1 x\n\n\n\n\n\n\n","category":"type"},{"location":"#GeometricAlgebra.FixedGradeBlades","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.FixedGradeBlades","text":"FixedGradeBlades{B}(k, n)\n\nGenerates all grade k unit blades in n dimensions ordered lexicographically. Unit blades of type B are produced.\n\nExamples\n\njulia> FixedGradeBlades{UInt8}(2, 3) .|> bitstring\n3-element Array{String,1}:\n \"00000011\"\n \"00000101\"\n \"00000110\"\n\njulia> FixedGradeBlades{Vector{Int}}(3, 4) |> collect\n4-element Array{Array{Int64,1},1}:\n [1, 2, 3]\n [1, 2, 4]\n [1, 3, 4]\n [2, 3, 4]\n\n\n\n\n\n","category":"type"},{"location":"#GeometricAlgebra.MixedMultivector","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.MixedMultivector","text":"MixedMultivector{sig,C} <: AbstractMultivector{sig,C}\nMixedMultivector{sig}(comps)\n\nInhomogeneous multivector in vector space of metric signature sig, containing 2^dimension(sig) components of varying grade.\n\nComponents are stored in the field .comps of type C, which in general may be an AbstractVector{T} or an AbstractDict{B,T}, where T is the component type (similar to Multivectors{sig,k,C}).\n\nWhen C<:AbstractVector, components are ordered by the binary value of the unit blade. E.g., the coefficient of v_1v_3v_4 is stored at index 1 + Int(0b1101) == 14.\n\nExamples\n\njulia> MixedMultivector{(1,1,1)}(Dict(Int[] => 1, [1] => 2, [1,2] => 3))\nMixedMultivector{⟨+++⟩, Dict{Array{Int64,1},Int64}}:\n 1\n 2 v1\n 3 v12\n\njulia> basis((x=1, y=1), 1) + 7\nMixedMultivector{⟨x+,y+⟩, Array{Float64,1}}:\n 7.0\n 1.0 x\n\njulia> ans.comps\n4-element Array{Float64,1}:\n 7.0\n 1.0\n 0.0\n 0.0\n\n\n\n\n\n","category":"type"},{"location":"#GeometricAlgebra.Multivector","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.Multivector","text":"Multivector{sig,k,C} <: AbstractMultivector{sig,C}\n\nHomogeneous multivector of grade k in space of metric signature sig, containing binomial(dimension(sig), k) components.\n\nComponents are stored in the field .comps of type C, which in general may be an AbstractVector{T} or an AbstractDict{B,T}, where T is the component type.\n\nIf C<:AbstractVector, components are stored in lexicographic order. E.g., the component of a 3-multivector corresponding to v_1v_3v_4 or 0b1101 is located at the ublade2lindex(0b1101) == 3rd index.\n\n\n\n\n\n","category":"type"},{"location":"#Base.eltype","page":"GeometricAlgebra.jl Documentation","title":"Base.eltype","text":"eltype(::AbstractMultivector)\neltype(::Type{<:AbstractMultivector})\n\nGive the numerical type of the components of a multivector.\n\n\n\n\n\n","category":"function"},{"location":"#Base.keytype","page":"GeometricAlgebra.jl Documentation","title":"Base.keytype","text":"keytype(::AbstractMultivector)\nkeytype(::Type{<:AbstractMultivector})\n\nGive the type in which unit blades are encoded in a multivector.\n\nE.g., for Blade{sig,k,T,B}, this is B. For multivectors with components stored in a dictionary of type C, this is keytype(C). For components stored in a vector (where the unit blades are not stored explicitly), keytype(a) defaults to an unsigned type used to index the vector.\n\nExamples\n\njulia> Blade{(1,1,1)}(42, 0b101)\nGrade-2 Blade{⟨+++⟩, 2, Int64, UInt8}:\n 42 v13\n\njulia> keytype(ans)\nUInt8\n\njulia> MixedMultivector{EuclideanSignature}(Dict([:z] => 1, [:x, :y] => 2))\nMixedMultivector{EuclideanSignature, Dict{Array{Symbol,1},Int64}}:\n 1 z\n 2 xy\n\njulia> keytype(ans)\nArray{Symbol,1}\n\n\n\n\n\n","category":"function"},{"location":"#GeometricAlgebra.basis","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.basis","text":"basis(::Type{<:AbstractMultivector}, i)\nbasis(::Type{<:AbstractMultivector})\n\nReturn the ith basis element of the given type, or a collection of all such basis elements if no index is given. For homogeneous types with grade k, this gives the ith basis k-blade in lexicographic order. For mixed multivector types, this gives the basis vectors / 1-blades.\n\nExamples\n\njulia> x, y, z = basis(Blade{(1,1,1),1,Float64,UInt})\n3-element Array{Blade{⟨+++⟩, 1, Float64, UInt64},1}:\n 1.0 v1\n 1.0 v2\n 1.0 v3\n\njulia> basis(Blade{(1,1,1),1,Float64,UInt}, 2) == y\ntrue\n\njulia> basis(Multivector{(1,1,1),2,Vector{Int}}, 1) == x*y\nERROR: MethodError: no method matching basis(::Type{Multivector{⟨+++⟩, 2, Array{Int64,1}}}, ::Int64)\nClosest candidates are:\n  basis(!Matched::Type{Blade{sig,k,T,B}}, ::Integer) where {sig, k, T, B} at /Users/jollywatt/Documents/JuliaPackages/GeometricAlgebra.jl/src/multivector.jl:623\n  basis(!Matched::Type{Multivector{sig,k,C} where C}, ::Integer) where {sig, k} at /Users/jollywatt/Documents/JuliaPackages/GeometricAlgebra.jl/src/multivector.jl:624\n  basis(!Matched::Type{var\"#s35\"} where var\"#s35\"<:(MixedMultivector{sig,C} where C), ::Integer) where sig at /Users/jollywatt/Documents/JuliaPackages/GeometricAlgebra.jl/src/multivector.jl:629\n  ...\nStacktrace:\n [1] top-level scope at none:1\n\n\n\n\n\n","category":"function"},{"location":"#GeometricAlgebra.basis-Tuple{Union{Tuple, NamedTuple, var\"#s35\"} where var\"#s35\"<:GeometricAlgebra.AbstractMetricSignature,Integer}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.basis","text":"basis(sig, i)\nbasis(sig)\n\nReturn a basis vector i for the space of metric signature sig, or a collection of all basis vectors (if sig has specified dimension).\n\nExamples\n\njulia> basis((x=1, y=1))\n2-element Array{Blade{⟨x+,y+⟩, 1, Float64, UInt8},1}:\n 1.0 x\n 1.0 y\n\njulia> basis((-1,1,1,1), 2)\nGrade-1 Blade{⟨-+++⟩, 1, Float64, UInt8}:\n 1.0 v2\n\njulia> basis(EuclideanSignature, :t)\nGrade-1 Blade{EuclideanSignature, 1, Float64, Array{Symbol,1}}:\n 1.0 t\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.bladeprodsign-Tuple{Unsigned,Unsigned}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.bladeprodsign","text":"Compute sign flips of blade product due to transposing basis vectors. (The full sign of the product will also depend on the basis norms.)\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.blades-Tuple{Blade}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.blades","text":"blades(a::AbstractMultivector)\n\nReturn a vector of Blades representing the non-zero components of the multivector a.\n\nExamples\n\njulia> x, y, z = basis((1,1,1));\n\n\n\njulia> blades(1 + 2x + 3y*z)\n3-element Array{Blade{(1, 1, 1),k,Float64,UInt64} where k,1}:\n 1.0\n 2.0 v1\n 3.0 v23\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.commutator_prod-Tuple{Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.commutator_prod","text":"a×b\ncommutator_prod(a, b)\n\nCommutator product of multivectors, given by a  b = (a*b - b*a)2.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.dimension-Union{Tuple{Type{var\"#s14\"} where var\"#s14\"<:(AbstractMultivector{sig,C} where C)}, Tuple{sig}} where sig","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.dimension","text":"dimension(::AbstractMultivector)\ndimension(::Type{<:AbstractMultivector})\n\nReturn the dimension of the vector space underlying the given multivector (or multivector type).\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.dot-Tuple{Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.dot","text":"a⋅b\ndot(a, b)\n\n\"Fat\" dot product of multivectors, giving the lowest-possible-grade part of the geometric product. Defined by ab = _ij a_i * b_j_i - j.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.generate_blades-Tuple{Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.generate_blades","text":"Return expression containing variable assignments for each basis blade for the given signature.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.grade-Tuple{Union{Real, Complex, TaylorSeries.AbstractSeries},Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.grade","text":"grade(a::AbstractMultivector)\n\nThe grade of the homogeneous multivector a. For MixedMultivectors, see grades.\n\nExamples\n\njulia> x, y, z = basis((1,1,1))\n3-element Array{Blade{⟨+++⟩, 1, Float64, UInt8},1}:\n 1.0 v1\n 1.0 v2\n 1.0 v3\n\njulia> grade(x*y)\n2\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.grade-Union{Tuple{j}, Tuple{sig}, Tuple{Blade{sig,j,T,B} where B where T,Any}} where j where sig","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.grade","text":"grade(a::AbstractMultivector, k)\n\nThe grade k part of a (mixed) multivector a. Returns a grade k Multivector.\n\nExamples\n\njulia> grade(x + 1 + y + x*y, 1)\nGrade-1 Multivector{⟨x+,y+⟩, 1, Array{Float64,1}}:\n 1.0 x\n 1.0 y\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.grades-Union{Tuple{Union{Blade{sig,k,T,B} where B where T, Multivector{sig,k,C} where C} where sig}, Tuple{k}} where k","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.grades","text":"grades(a::AbstractMultivector)\n\nThe non-zero grades of the multivector a.\n\nExamples\n\njulia> x, y, z = basis((1,1,1))\n3-element Array{Blade{⟨+++⟩, 1, Float64, UInt8},1}:\n 1.0 v1\n 1.0 v2\n 1.0 v3\n\njulia> grades(1 + x*y)\n2-element Array{Int64,1}:\n 0\n 2\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.hodgedual-Tuple{AbstractMultivector}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.hodgedual","text":"★(a)\nhodgedual(a)\n\nHodge dual or 'star' operator, satisfying a(b) == (ab)vol(a).(?)\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.lindex2ublade-Tuple{Any,Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.lindex2ublade","text":"Convert linear index i of into unit k-blade. The linear index (lindex) gives the index of the unit blade sorted lexicographically.\n\njulia> lindex2ublade.(UInt8, 3, 1:5) .|> bitstring\n5-element Vector{String}:\n \"00000111\"\n \"00001011\"\n \"00001101\"\n \"00001110\"\n \"00010011\"\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.mapcomps","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.mapcomps","text":"mapcomps!(f, a)\nmapcomps(f, a)\n\nMap the components of a multivector a by the function f, which is called with a single Blade argument and whose return type should be eltype(a).\n\nThe mutating version mapcomps! maps the components in-place.\n\n\n\n\n\n","category":"function"},{"location":"#GeometricAlgebra.mapcomps!","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.mapcomps!","text":"mapcomps!(f, a)\nmapcomps(f, a)\n\nMap the components of a multivector a by the function f, which is called with a single Blade argument and whose return type should be eltype(a).\n\nThe mutating version mapcomps! maps the components in-place.\n\n\n\n\n\n","category":"function"},{"location":"#GeometricAlgebra.next_bit_permutation-Tuple{Unsigned}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.next_bit_permutation","text":"Return the smallest uint larger than the one given which has the same number of binary ones. Algorithm is Gosper's hack, documented at http://graphics.stanford.edu/~seander/bithacks.html#NextBitPermutation.\n\njulia> GeometricAlgebra.next_bit_permutation(0b1011) |> bitstring\n\"00001101\"\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.next_ublade-Tuple{Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.next_ublade","text":"Give the next unit blade of the same grade in lexicographic order.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.rsqrt-Tuple{Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.rsqrt","text":"rsqrt(x)\n\nReal-valued square root defined on all real numbers as sign(x)sqrt(abs(x)).\n\nExamples\n\njulia> rsqrt(-9)\n-3.0\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.show_blade-Tuple{IO,Any,Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.show_blade","text":"Display blade with parentheses surrounding coefficient if necessary.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.show_mixedmultivector-Tuple{IO,MixedMultivector}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.show_mixedmultivector","text":"Display inhomogeneous MixedMultivector with each grade on a new line.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.show_multivector-Tuple{IO,Multivector}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.show_multivector","text":"Display a multivector as a column of blades, with coefficients aligned using the native alignment mechanism, and blades basis aligned.\n\njulia> 1e3x + y + 1e-3z\n1-Multivector{⟨x+,y+,z+⟩, Vector{Float64}, 1}\n 1000.0   x\n    1.0   y\n    0.001 z\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.show_ublade-Tuple{IO,Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.show_ublade","text":"Display unit blade without coefficient.\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.signature-Union{Tuple{Type{var\"#s14\"} where var\"#s14\"<:(AbstractMultivector{sig,C} where C)}, Tuple{sig}} where sig","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.signature","text":"signature(::AbstractMultivector)\nsignature(::Type{<:AbstractMultivector})\n\nReturn the metric signature associated with the given multivector or multivector type. \n\nMetric signatures can be any object implementing getindex to return the norm of a given basis vector. Signatures may be Tuples, NamedTuples, or instances of AbstractMetricSignature.\n\nExamples\n\njulia> x = Blade{(x=1, y=1)}(1, [:x])\nGrade-1 Blade{⟨x+,y+⟩, 1, Int64, Array{Symbol,1}}:\n 1 x\n\njulia> signature(x)\n(x = 1, y = 1)\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.ubladeprod-Tuple{Any,Array{T,1} where T}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.ubladeprod","text":"Compute the geometric product of unit basis vectors, returning a scalar coefficient and the resulting unit blade.\n\njulia> GeometricAlgebra.ubladeprod((1,1,1), [1, 2, 1, 2, 3])\n(-1, [3])\n\njulia> GeometricAlgebra.ubladeprod((1,1,1), 0b011, 0b111)\n(-1, 0x04)\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.vol-Union{Tuple{Type{var\"#s34\"} where var\"#s34\"<:(AbstractMultivector{sig,C} where C)}, Tuple{sig}} where sig","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.vol","text":"vol(x)\n\nThe volume form or pseudoscalar element.\n\nExamples\n\njulia> x = basis((1, 1, 1), 1)\nGrade-1 Blade{⟨+++⟩, 1, Float64, UInt8}:\n 1.0 v1\n\njulia> vol(x)\nGrade-3 Blade{⟨+++⟩, 3, Float64, UInt8}:\n 1.0 v123\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.wedge-Tuple{Any,Any}","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.wedge","text":"a∧b\nwedge(a, b)\n\nWedge product of multivectors, giving the highest-possible-grade part of the geometric product a*b. Defined by ab = _ij a_i * b_j_(i + j).\n\n\n\n\n\n","category":"method"},{"location":"#GeometricAlgebra.@basis-Tuple","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.@basis","text":"@basis sig\n@basis x y z...\n\nPopulate the local namespace with basis blades of all grades for the geometric algebra with signature sig, which may be provided as a string, tuple, named tuple or <:AbstractMetricSignature. If multiple arguments are given, each is interpreted as specifying a label and square (defaulting to 1) of a basis vector. For an n-dimensional signature, 2^n basis blades are defined.\n\nSee also @basis_perms.\n\nExamples\n\njulia> @basis \"+++\"\n[ Info: Defined basis blades v, v1, v2, v3, v12, v13, v23, v123\n\njulia> @basis (+1,0,-1)\n[ Info: Defined basis blades v, v1, v2, v3, v12, v13, v23, v123\n\njulia> @basis dt=-1 dx\n[ Info: Defined basis blades dt, dx, dtdx\n\njulia> dt^2 + dx\nMixedMultivector{⟨dt-,dx+⟩, Array{Float64,1}}:\n -1.0\n 1.0 dx\n\n\n\n\n\n","category":"macro"},{"location":"#GeometricAlgebra.@basis_perms-Tuple","page":"GeometricAlgebra.jl Documentation","title":"GeometricAlgebra.@basis_perms","text":"@basis_perms\n\nSimilarly to @basis, populate the local namespace with basis blades, but include names for all permutations of the basis vectors.\n\nMore than 2^n variables are defined for a signature of dimension n!\n\nExample\n\njulia> @basis_perms x y z\n[ Info: Defined basis blades x, y, z, xy, yx, xz, zx, yz, zy, xyz, xzy, yxz, yzx, zxy, zyx\n\njulia> zyx\nGrade-3 Blade{⟨x+,y+,z+⟩, 3, Float64, UInt8}:\n -1.0 xyz\n\n\n\n\n\n","category":"macro"}]
}
